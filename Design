class Student:
    def __init__(self, id, name, age, major):
        self.id = id
        self.name = name
        self.age = age
        self.major = major

    def get_info(self):
        return f"ID: {self.id}, Name: {self.name}, Age: {self.age}, Major: {self.major}"


class StudentService:
    def __init__(self, student_database):
        self.database = student_database

    def add_student(self, student):
        self.database.add_student(student)

    def remove_student(self, student_id):
        self.database.remove_student(student_id)

    def update_student(self, student_id, update_data):
        for student in self.database.students:
            if student.id == student_id:
                for key, value in update_data.items():
                    setattr(student, key, value)  # Dynamic attribute update
                break

    def get_all_students(self):
        return [student.get_info() for student in self.database.students]


class StudentDatabase:
    def __init__(self):
        self.students = []

    def add_student(self, student):
        self.students.append(student)

    def remove_student(self, student_id):
        for student in self.students:
            if student.id == student_id:
                self.students.remove(student)
                break


class StudentManagementSystem:
    def __init__(self):
        self.student_service = StudentService(StudentDatabase())

    def menu(self):
        print("\nStudent Management System")
        print("1. Add Student")
        print("2. Delete Student")
        print("3. Update Student Information")
        print("4. View All Students")
        print("5. Exit")
        choice = input("Enter your choice: ")
        return choice

    def run(self):
        while True:
            choice = self.menu()
            if choice == "1":
                self.add_student()
            elif choice == "2":
                self.delete_student()
            elif choice == "3":
                self.update_student()
            elif choice == "4":
                self.view_all_students()
            elif choice == "5":
                print("Exiting...")
                break
            else:
                print("Invalid choice. Please try again.")

    def add_student(self):
        id = int(input("Enter student ID: "))
        name = input("Enter student name: ")
        age = int(input("Enter student age: "))
        major = input("Enter student major: ")
        student = Student(id, name, age, major)
        self.student_service.add_student(student)
        print("Student added successfully.")

    def delete_student(self):
        student_id = int(input("Enter student ID to delete: "))
        self.student_service.remove_student(student_id)
        print("Student deleted successfully.")

    def update_student(self):
        student_id = int(input("Enter student ID to update: "))
        update_data = {}
        while True:
            field = input("Enter field to update (name, age, major, or 'n' to finish): ")
            if field.lower() == "n":
                break
            if field.lower() in ["name", "age", "major"]:
                value = input(f"Enter new value for {field}: ")
                update_data[field] = value
            else:
                print("Invalid field. Please try again.")
        self.student_service.update_student(student_id, update_data)
        print("Student information updated successfully.")

    def view_all_students(self):
